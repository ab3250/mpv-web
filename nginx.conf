
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /media/stor/gentoo-files/execs/compilers/programs/JS/mpv-web/nginx/conf/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        off;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    
    #gzip  on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
   }
   upstream websocket {
      server localhost:8080;
   }


    server {
set $rtdir /media/stor/gentoo-files/execs/compilers/programs/JS/mpv-web/www;
 
        listen       8000;
        server_name  localhost;
   
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
		    root $rtdir;
            index  index.html index.htm;
            ##
                   add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache';
        if_modified_since off;
        expires off;
        etag off;
            ##
            
        }
	location  /Music/ {	    
            root $rtdir;
#           set $args $args&callback=process;
    	    autoindex on;
            autoindex_exact_size on;
            autoindex_format json;
            autoindex_localtime on; 
       #     add_header X-Frame-Options SAMEORIGIN;
       #     xslt_stylesheet /media/stor/gentoo-files/execs/compilers/programs/JS/MPV/mpv-prog2/www/main.xslt;  
       #     add_header  Access-Control-Allow-Origin "http://localhost:8000";
       #     add_header  Access-Control-Allow-Methods "GET, POST, OPTIONS";
       #     add_header  Access-Control-Allow-Headers "Origin, Authorization, Accept";
       #     add_header  Access-Control-Allow-Credentials true; 

	}
            location /ws/ {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


}
